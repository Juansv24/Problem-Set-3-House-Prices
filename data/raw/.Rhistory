mutate(balcony = ifelse(balcony!=0,
1,             # 1 tiene balcón/terraza/patio
balcony)
)
### Creación de la variable categórica con garaje, imputándola de la descripción, en train y test
####### Para train
p5 = "\\s?+(garaje|garajes|parqueadero|parqueaderos)+\\s?"
raw_train$garage <- NA
raw_train <- raw_train %>%
mutate(garage = ifelse(is.na(garage)== T,
str_extract(string = raw_train$description,
pattern = p5),
garage)
)
table(is.na(raw_train$garage)) #11906 NA
table(is.na(raw_train$garage))
raw_train$garage[is.na(raw_train$garage)] <- 0 # 0 no tiene garaje
raw_train <- raw_train %>%
mutate(garage = ifelse(garage!=0,
1,             # 1 tiene garaje
garage)
)
####### Para test
raw_test$garage <- NA
raw_test <- raw_test %>%
mutate(garage = ifelse(is.na(garage)== T,
str_extract(string = raw_test$description,
pattern = p5),
garage)
)
table(is.na(raw_test$garage)) #3169 NA
table(is.na(raw_test$garage))
raw_test$garage[is.na(raw_test$garage)] <- 0 # 0 no tiene garaje
raw_test <- raw_test %>%
mutate(garage = ifelse(garage!=0,
1,             # 1 tiene garaje
garage)
)
### Se ajusta el formato de las variables imputadas
### Variable surface_total en train
raw_train <- raw_train %>%
mutate(surface_total = gsub('m', '', raw_train$surface_total))
raw_train <- raw_train %>%
mutate(surface_total = ifelse(surface_total == 'character(0)',
NA,
surface_total)
)
raw_train$surface_total <- as.numeric(raw_train$surface_total)
### Variable surface_total en test
raw_test <- raw_test %>%
mutate(surface_total = gsub('m', '', raw_test$surface_total))
raw_test <- raw_test %>%
mutate(surface_total = ifelse(surface_total == 'character(0)',
NA,
surface_total)
)
raw_test$surface_total <- as.numeric(raw_test$surface_total)
### Variable bathrooms en train
raw_train <- raw_train %>%
mutate(bathrooms = gsub('banos|bano', '', raw_train$bathrooms))
raw_train <- raw_train %>%
mutate(bathrooms = gsub('con|un', '1', raw_train$bathrooms))
raw_train <- raw_train %>%
mutate(bathrooms = gsub('dos', '2', raw_train$bathrooms))
raw_train <- raw_train %>%
mutate(bathrooms = gsub('tres', '3', raw_train$bathrooms))
raw_train$bathrooms <- as.numeric(raw_train$bathrooms)
### Variable bathrooms en test
raw_test <- raw_test %>%
mutate(bathrooms = gsub('banos|bano', '', raw_test$bathrooms))
raw_test <- raw_test %>%
mutate(bathrooms = gsub('con|un', '1', raw_test$bathrooms))
raw_test <- raw_test %>%
mutate(bathrooms = gsub('dos', '2', raw_test$bathrooms))
raw_test <- raw_test %>%
mutate(bathrooms = gsub('tres', '3', raw_test$bathrooms))
raw_test$bathrooms <- as.numeric(raw_test$bathrooms)
### Dicotomizar la variable tipo de propiedad en train y test
raw_train <- raw_train %>%
mutate(property_type = ifelse(property_type == 'Casa',
1,
0)
)
raw_test <- raw_test %>%
mutate(property_type = ifelse(property_type == 'Casa',
1,
0)
)
#---- Estudio de patrones espaciales e inclusión de cuatro predictores de fuentes externas
####### Estudio del patrón espacial del precio del inmueble
#### Se eliminan las observaciones que no tienen información de latitud o longitud
filtro1 <- is.na(raw_train$lat) | is.na(raw_train$lon)
raw_train <- raw_train[!filtro1, ]
#### Revisión que las observaciones estén bien georeferenciadas y que estén dentro de Bogotá
limites <- getbb("Bogota Colombia")
#### Primera visualización
leaflet() %>%
addTiles() %>%
addCircles(lng = raw_train$lon,
lat = raw_train$lat)
#### Se restringe la muestra a observaciones dentro de Bogotá
filtro1 <- between(raw_train$lon, limites[1, "min"], limites[1, "max"])
filtro2 <- between(raw_train$lat, limites[2, "min"], limites[2, "max"])
filtro3 <- filtro1 & filtro2
raw_train <- raw_train[filtro3,]
available_tags("leisure")
parques <- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "leisure" , value = "park")
parque_infantil <- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "leisure" , value = "playground")
available_tags("amenity")
hospital <- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "amenity" , value = "hospital")
clinica<- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "amenity" , value = "clinic")
estacion_bus<- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "amenity" , value = "bus_station")
policia<- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "amenity" , value = "police")
colegio<- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "amenity" , value = "school")
mercado<- opq(bbox = getbb("Bogota Colombia")) %>%
add_osm_feature(key = "amenity" , value = "marketplace")
#---Gráficar mapas variables externas
#---Parques---#
parques_sf <- osmdata_sf(parques)
#--- Extraer geometria
parques_geometria <- parques_sf$osm_polygons %>%
select(osm_id, name)
parques_geometria
#---estacion_bus---#
estacion_bus_sf <- osmdata_sf(estacion_bus)
#--- Extraer geometria
estacion_bus_geometria <- estacion_bus_sf$osm_polygons %>%
select(osm_id, name)
estacion_bus_geometria
#---policia---#
policia_sf <- osmdata_sf(policia)
#--- Extraer geometria
policia_geometria <- policia_sf$osm_polygons %>%
select(osm_id, name)
policia_geometria
#---colegio---#
colegio_sf <- osmdata_sf(colegio)
#--- Extraer geometria
colegio_geometria <- colegio_sf$osm_polygons %>%
select(osm_id, name)
colegio_geometria
#---mercado---#
mercado_sf <- osmdata_sf(mercado)
#--- Extraer geometria
mercado_geometria <- mercado_sf$osm_polygons %>%
select(osm_id, name)
mercado_geometria
#---Centroides
centroides_parques <- gCentroid(as(parques_geometria$geometry, "Spatial"), byid = T)
centroides_hospital <- gCentroid(as(hospital_geometria$geometry, "Spatial"), byid = T)
#---Hospital---#
hospital_sf <- osmdata_sf(hospital)
#--- Extraer geometria
hospital_geometria <- hospital_sf$osm_polygons %>%
select(osm_id, name)
hospital_geometria
#---Centroides
centroides_parques <- gCentroid(as(parques_geometria$geometry, "Spatial"), byid = T)
centroides_hospital <- gCentroid(as(hospital_geometria$geometry, "Spatial"), byid = T)
centroides_estacion_bus <- gCentroid(as(estacion_bus_geometria$geometry, "Spatial"), byid = T)
centroides_policia <- gCentroid(as(policia_geometria$geometry, "Spatial"), byid = T)
centroides_colegio <- gCentroid(as(colegio_geometria$geometry, "Spatial"), byid = T)
centroides_mercado <- gCentroid(as(mercado_geometria$geometry, "Spatial"), byid = T)
# Convertir data espacial
train_sf <- st_as_sf(raw_train, coords = c("lon", "lat"))
st_crs(train_sf) <- 4326
test_sf <- st_as_sf(raw_test, coords = c("lon", "lat"))
st_crs(test_sf) <- 4326
options(scipen = 999)
write.csv(train_sf, file = "C:/Users/andre/OneDrive/Github/Repositorios/Problem-Set-3-House-Prices/data/work/train_imputada.csv")
write.csv(test_sf, file = "C:/Users/andre/OneDrive/Github/Repositorios/Problem-Set-3-House-Prices/data/work/test_imputada.csv")
dim(train_sf) # 38644    17
dim(test_sf) # 10286    17
centroides_parques_sf <- st_as_sf(centroides_parques, coords = c("x", "y"))
centroides_hospital_sf <- st_as_sf(centroides_hospital, coords = c("x", "y"))
centroides_estacion_bus_sf <- st_as_sf(centroides_estacion_bus, coords = c("x", "y"))
centroides_policia_sf <- st_as_sf(centroides_policia, coords = c("x", "y"))
centroides_colegio_sf <- st_as_sf(centroides_colegio, coords = c("x", "y"))
centroides_mercado_sf <- st_as_sf(centroides_mercado, coords = c("x", "y"))
#----Distancias parques
dist_matrix_parques_train <- st_distance(x=train_sf, y=centroides_parques_sf)
dist_min_parques_train <- apply(dist_matrix_parques_train, 1 ,min)
train_sf$distancia_parque <- dist_min_parques_train
posicion <- apply(dist_matrix_parques_train, 1, function(x) which(min(x)==x))
area <- st_area(parques_geometria)
train_sf$area__parque <- area[posicion]
train_sf$area__parque <-as.numeric(train_sf$area__parque)
#----Distancias Hospital
dist_matrix_hospital_train <- st_distance(x=train_sf, y=centroides_hospital_sf)
dist_min_hospital_train <- apply(dist_matrix_hospital_train, 1 ,min)
train_sf$distancia_hospital <- dist_min_hospital_train
#----Distancias estacion_bus
dist_matrix_estacion_bus_train <- st_distance(x=train_sf, y=centroides_estacion_bus_sf)
dist_min_estacion_bus_train <- apply(dist_matrix_estacion_bus_train, 1 ,min)
train_sf$distancia_estacion_bus <- dist_min_estacion_bus_train
#----Distancias policia
dist_matrix_policia_train <- st_distance(x=train_sf, y=centroides_policia_sf)
dist_min_policia_train <- apply(dist_matrix_policia_train, 1 ,min)
train_sf$distancia_policia <- dist_min_policia_train
#----Distancias mercado
dist_matrix_mercado_train <- st_distance(x=train_sf, y=centroides_mercado_sf)
dist_min_mercado_train <- apply(dist_matrix_mercado_train, 1 ,min)
train_sf$distancia_mercado <- dist_min_mercado_train
tab_train_missings_vf <- apply(train_sf, 2, function(x) sum(is.na(x)))
tab_train_missings_vf <- table(tab_train_missings_vf)
tab_train_missings_vf
dim(train_sf) # 38644    24
#----Distancias parques
dist_matrix_parques_test <- st_distance(x=test_sf, y=centroides_parques_sf)
dist_min_parques_test <- apply(dist_matrix_parques_test, 1 ,min)
test_sf$distancia_parque <- dist_min_parques_test
posicion <- apply(dist_matrix_parques_test, 1, function(x) which(min(x)==x))
area <- st_area(parques_geometria)
test_sf$area__parque <- area[posicion]
test_sf$area__parque <-as.numeric(test_sf$area__parque)
#----Distancias Hospital
dist_matrix_hospital_test <- st_distance(x=test_sf, y=centroides_hospital_sf)
dist_min_hospital_test <- apply(dist_matrix_hospital_test, 1 ,min)
test_sf$distancia_hospital <- dist_min_hospital_test
#----Distancias estacion_bus
dist_matrix_estacion_bus_test <- st_distance(x=test_sf, y=centroides_estacion_bus_sf)
dist_min_estacion_bus_test <- apply(dist_matrix_estacion_bus_test, 1 ,min)
test_sf$distancia_estacion_bus <- dist_min_estacion_bus_test
#----Distancias policia
dist_matrix_policia_test <- st_distance(x=test_sf, y=centroides_policia_sf)
dist_min_policia_test <- apply(dist_matrix_policia_test, 1 ,min)
test_sf$distancia_policia <- dist_min_policia_test
#----Distancias colegio
dist_matrix_colegio_test <- st_distance(x=test_sf, y=centroides_colegio_sf)
dist_min_colegio_test <- apply(dist_matrix_colegio_test, 1 ,min)
test_sf$distancia_colegio <- dist_min_colegio_test
#----Distancias mercado
dist_matrix_mercado_test <- st_distance(x=test_sf, y=centroides_mercado_sf)
dist_min_mercado_test <- apply(dist_matrix_mercado_test, 1 ,min)
test_sf$distancia_mercado <- dist_min_mercado_test
tab_test_missings_vf <- apply(test_sf, 2, function(x) sum(is.na(x)))
tab_test_missings_vf <- table(tab_test_missings_vf)
tab_test_missings_vf
dim(test_sf) # 10286    24
table(train_sf$property_type)
glimpse(train_sf$property_type)
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
mutate(
property_type = as.character(property_type),
rooms = as.numeric(rooms),
bedrooms = as.numeric(bedrooms),
bathrooms = as.numeric(bathrooms),
balcony = as.character(balcony),
garage = as.character(garage)
) %>%
na.omit()
#----Distancias colegio
dist_matrix_colegio_train <- st_distance(x=train_sf, y=centroides_colegio_sf)
dist_min_colegio_train <- apply(dist_matrix_colegio_train, 1 ,min)
train_sf$distancia_colegio <- dist_min_colegio_train
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
mutate(
property_type = as.character(property_type),
rooms = as.numeric(rooms),
bedrooms = as.numeric(bedrooms),
bathrooms = as.numeric(bathrooms),
balcony = as.character(balcony),
garage = as.character(garage)
) %>%
na.omit()
descriptivas <- model_data_train[c("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
descriptivas_all <- data.frame(sapply(descriptivas, function(x)
c(mean = mean(x), sd = sd(x))))
descriptivas <- model_data_train %>% summarise(media = mean(price), desviacion = sd(price))
descriptivas
media_desviacion <- model_data_train %>%
summarize(media_price = mean(price),
desviacion_price = sd(price),
media_rooms = mean(rooms),
desviacion_rooms = sd(rooms),
media_bedrooms = mean(bedrooms),
desviacion_bedrooms = sd(bedrooms),
media_bathrooms = mean(bathrooms),
desviacion_bathrooms = sd(bathrooms),
media_distancia_parque = mean(distancia_parque),
desviacion_distancia_parque = sd(distancia_parque),
media_area_parque = mean(area__parque),
desviacion_area_parque = sd(area__parque),
media_distancia_hospital = mean(distancia_hospital),
desviacion_distancia_hospital = sd(distancia_hospital),
media_distancia_estacion_bus = mean(distancia_estacion_bus),
desviacion_distancia_estacion_bus = sd(distancia_estacion_bus),
media_distancia_policia = mean(distancia_policia),
desviacion_distancia_policia = sd(distancia_policia),
media_distancia_colegio = mean(distancia_colegio),
desviacion_distancia_colegio = sd(distancia_colegio),
media_distancia_mercado = mean(distancia_mercado),
desviacion_distancia_mercado = sd(distancia_mercado))
stargazer(media_desviacion, type = "latex", title = "Media y desviación estándar de las variables seleccionadas", align = TRUE)
media_desviacion
colnames(media_desviacion)
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
mutate(
property_type = as.character(property_type),
rooms = as.numeric(rooms),
bedrooms = as.numeric(bedrooms),
bathrooms = as.numeric(bathrooms),
balcony = as.character(balcony),
garage = as.character(garage)
) %>%
na.omit()
descriptivas <- model_data_train[c("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
descriptivas_all <- data.frame(sapply(descriptivas, function(x)
c(mean = mean(x), sd = sd(x))))
class(model_data_train)
sum(is.na(model_data_train))
summary(model_data_train)
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
mutate(
property_type = as.character(property_type),
rooms = as.character(rooms),
bedrooms = as.character(bedrooms),
bathrooms = as.character(bathrooms),
balcony = as.character(balcony),
garage = as.character(garage)
) %>%
na.omit()
descriptivas <- model_data_train[c("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
summary(model_data_train)
## Cuantificar los valores perdidos de la base de datos
sum(is.na(model_data_train))
descriptivas_all <- data.frame(sapply(descriptivas, function(x)
c(mean = mean(x), sd = sd(x))))
descriptivas <- model_data_train[c("price",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
descriptivas_all <- data.frame(sapply(descriptivas, function(x)
c(mean = mean(x), sd = sd(x))))
summary(model_data_train)
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
mutate(
property_type = as.character(property_type),
rooms = as.character(rooms),
bedrooms = as.character(bedrooms),
bathrooms = as.character(bathrooms),
balcony = as.character(balcony),
garage = as.character(garage)
) %>%
na.omit()
descriptivas <- model_data_train[c("price","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
descriptivas_all <- data.frame(sapply(descriptivas, function(x)
c(mean = mean(x), sd = sd(x))))
model_data_train <- train_sf %>%
select("price","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
mutate(
property_type = as.character(property_type),
rooms = as.character(rooms),
bedrooms = as.character(bedrooms),
bathrooms = as.character(bathrooms),
balcony = as.character(balcony),
garage = as.character(garage)
) %>%
na.omit()
model_data_train <- train_sf %>%
select("price","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
na.omit()
descriptivas <- model_data_train[c("price","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
descriptivas_all <- data.frame(sapply(descriptivas, function(x)
c(mean = mean(x), sd = sd(x))))
summary(model_data_train)
table(train_sf$rooms)
glimpse(train_sf$rooms)
d_price_ <- model_data_train %>% summarise(media = mean(price), desviacion = sd(price))
d_price
d_price <- model_data_train %>% summarise(media = mean(price), desviacion = sd(price))
d_price
d_rooms <- model_data_train %>% summarise(media = mean(rooms), desviacion = sd(rooms))
class(model_data_train$rooms)
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
mutate(
property_type = as.character(property_type),
rooms = as.numeric(rooms),
bedrooms = as.numeric(bedrooms),
bathrooms = as.numeric(bathrooms),
balcony = as.character(balcony),
garage = as.character(garage)
) %>%
na.omit()
descriptivas <- model_data_train[c("price","rooms","bedrooms","bathrooms","property_type",
"balcony","garage","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
summary(model_data_train)
d_rooms <- model_data_train %>% summarise(media = mean(rooms), desviacion = sd(rooms))
d_rooms
class(model_data_train$property_type)
d_bedrooms <- model_data_train %>% summarise(media = mean(bedrooms), desviacion = sd(bedrooms))
d_bedrooms
d_bathrooms <- model_data_train %>% summarise(media = mean(bathrooms), desviacion = sd(bathrooms))
d_bathrooms
d_property_type <- model_data_train %>% summarise(media = mean(property_type), desviacion = sd(property_type))
d_property_type
d_balcony <- model_data_train %>% summarise(media = mean(balcony), desviacion = sd(balcony))
d_balcony
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
mutate(
property_type = as.character(property_type),
rooms = as.numeric(rooms),
bedrooms = as.numeric(bedrooms),
bathrooms = as.numeric(bathrooms),
balcony = as.character(balcony),
garage = as.character(garage)
) %>%
na.omit()
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
na.omit()
descriptivas <- model_data_train[c("price","rooms","bedrooms","bathrooms","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
descriptivas_all <- data.frame(sapply(descriptivas, function(x)
c(mean = mean(x), sd = sd(x))))
model_data_train <- train_sf %>%
select("price","rooms","bedrooms","bathrooms","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
na.omit()
as.numeric(model_data_train)
table(train_sf$garage)
glimpse(train_sf$garage)
d_distancia_parque <- model_data_train %>% summarise(media = mean(distancia_parque), desviacion = sd(distancia_parque))
d_distancia_parque
d_area__parque <- model_data_train %>% summarise(media = mean(area__parque), desviacion = sd(area__parque))
d_area__parque
d_distancia_hospital<- model_data_train %>% summarise(media = mean(distancia_hospital), desviacion = sd(distancia_hospital))
d_distancia_hospital
d_distancia_estacion_bus<- model_data_train %>% summarise(media = mean(distancia_estacion_bus), desviacion = sd(distancia_estacion_bus))
d_distancia_estacion_bus
d_distancia_policia<- model_data_train %>% summarise(media = mean(distancia_policia), desviacion = sd(distancia_policia))
d_distancia_policia
d_distancia_colegio<- model_data_train %>% summarise(media = mean(distancia_colegio), desviacion = sd(distancia_colegio))
d_distancia_colegio
d_distancia_mercado<- model_data_train %>% summarise(media = mean(distancia_mercado), desviacion = sd(distancia_mercado))
d_distancia_mercado
model_data_test <- test_sf %>%
select("price","rooms","bedrooms","bathrooms","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
na.omit()
as.numeric(model_data_test)
descriptivas <- model_data_test[c("price","rooms","bedrooms","bathrooms","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado")]
descriptivas_all <- data.frame(sapply(descriptivas, function(x)
c(mean = mean(x), sd = sd(x))))
summary(model_data_test)
model_data_test <- test_sf %>%
select("rooms","bedrooms","bathrooms","distancia_parque","area__parque",
"distancia_hospital", "distancia_estacion_bus",
"distancia_policia","distancia_colegio", "distancia_mercado") %>%
na.omit()
as.numeric(model_data_test)
summary(model_data_test)
